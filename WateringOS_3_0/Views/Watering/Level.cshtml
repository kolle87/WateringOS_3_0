@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/Chart.bundle.js"></script>
    <script src="~/js/moment.js"></script>
</head>

<div class="container-fluid" style="width:100%;padding:90px 0px 0px 60px">
    <table class="grid" width="100%">
        <tbody>
            <tr>
                <td style="width:130px"><h5>Tank Level</h5></td>
                <td></td>
                <td style="width:80px"><button style="width:72px" onclick="Show24h()" id="btn_24H" class="btn btn-outline-primary btn-sm btn-block" default>24 hrs</button></td>
                <td style="width:80px"><button style="width:72px" onclick="Show1wk()" id="btn_1WK" class="btn btn-outline-primary btn-sm btn-block" default>1 week</button></td>
                
            </tr>
        </tbody>
    </table>
</div>
<canvas id="level_chart" style="width:100%;height:600px;min-height:300px;margin:10px 0px 0px 0px;"></canvas>

<script>
        var ctx = document.getElementById('level_chart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Tank Level',
                    fill: true,
                    backgroundColor: 'rgba(3, 169, 244, 0.3)',
                    borderColor: "#03a9f4",
                    borderWidth: 2,
                    pointRadius: 0,
                    data: [],
                    //lineTension: 0
                    cubicInterpolationMode: 'monotone'
                },
                {
                    label: 'Day Grid',
                    fill: false,
                    borderColor: "#5f5f5f",
                    borderWidth: 1.5,
                    pointRadius: 0,
                    data: [],
                    lineTension: 0
                },
                {
                    label: 'Min Level',
                    fill: false,
                    borderColor: "#c80000",
                    borderWidth: 3,
                    pointRadius: 0,
                    data: [],
                    lineTension: 0
                }]
            },
            options: {
                title: {
                    display: false,
                    text: 'Tank Level',
                    fontSize: 16,
                    fontFamily: 'Helvetica'
                },
                legend: {
                    display: false
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            max: 110,
                            min: 0,
                            stepSize: 10
                        },
                        scaleLabel: {
                            display: true,
                            labelString: '[%]'
                        }
                    }],
                    xAxes: [{
                        type: 'time',
                        ticks: {
                            major: {
                                enabled: true,
                                fontStyle: 'bold',
                                fontSiz: 14,
                                unit: 'day'
                            },
                            source: 'auto',
                            autoSkip: 'true',
                            autoSkipPadding: 25
                        },
                        time: {
                            unit: 'hour',
                            displayFormats: {
                                hour: 'HH:mm'
                            }
                        }
                    }]
                },
                tooltips: {
                    position: 'nearest',
                    mode: 'index',
                    intersect: false,
                    callbacks: {
                        title: function (tooltipItem, data) {
                            var vTitle = [];
                            vTitle[0] = moment(tooltipItem[0].label).format("ddd, DD/MMM");
                            vTitle[1] = moment(tooltipItem[0].label).format("HH:mm");
                            return vTitle;
                        },
                        label: function (tooltipItem, data) {
                            var vLabel = data.datasets[tooltipItem.datasetIndex].label + " " + tooltipItem.value + "%"
                            return vLabel;
                        }
                    }
                },
                hover: {
                    animationDuration: 0
                }
            }
        });

    $(document).ready(function () { Show1wk(); });

    function ClearData() {
        myChart.data.labels = [];
        myChart.data.datasets[0].data = [];
        myChart.data.datasets[1].data = [];
        myChart.data.datasets[2].data = [];
        myChart.update();
    }

    function Show24h() {
        ClearData();
        var MinLevel = 0;
        $.post("/DataProvision/GetTankAlarmLevel", function (result) { MinLevel = result; });
        $.ajax({
				type: "POST",
				dataType: "json",
				contentType: "application/json",
				url: '@Url.Action("GetLevelData","DataProvision")',
                success: function (result) {
                    myChart.data.labels.push(moment().subtract(24, 'hours'));
                    // Major Gridlines
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0), y: 120 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0), y: -10 });
                    // Minimum Level
                    myChart.data.datasets[2].data.push({ x: moment(),                      y: MinLevel });
                    myChart.data.datasets[2].data.push({ x: moment().subtract(24, 'hour'), y: MinLevel });
                    // -----
                    $.each(result, function (i, v) {
                        if (moment(v.TimeStamp) >= moment().subtract(24, 'hours')) {
                            myChart.data.datasets[0].data.push({
                                x: moment(v.TimeStamp),
                                y: v.Tank
                            });
                        }
                    });
                    myChart.data.labels.push(moment());
                    myChart.update();
                }
            });
    }

    function Show1wk() {
        ClearData();
        var MinLevel = 0;
        $.post("/DataProvision/GetTankAlarmLevel", function (result) { MinLevel = result; });
        $.ajax({
				type: "POST",
				dataType: "json",
				contentType: "application/json",
				url: '@Url.Action("GetLevelData", "DataProvision")',
                success: function (result) {
                    myChart.data.labels.push(moment().minute(0).subtract(168, 'hour'));
                    // Major Gridlines
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0),                    y: 120 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0),                    y: -10 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(1, 'day'), y: -10 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(1, 'day'), y: 120 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(2, 'day'), y: 120 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(2, 'day'), y: -10 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(3, 'day'), y: -10 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(3, 'day'), y: 120 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(4, 'day'), y: 120 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(4, 'day'), y: -10 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(5, 'day'), y: -10 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(5, 'day'), y: 120 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(6, 'day'), y: 120 });
                    myChart.data.datasets[1].data.push({ x: moment().hour(0).minute(0).second(0).subtract(6, 'day'), y: -10 });
                    // Minimum Level
                    myChart.data.datasets[2].data.push({ x: moment().minute(0).add(1, 'hour'),        y: MinLevel });
                    myChart.data.datasets[2].data.push({ x: moment().minute(0).subtract(168, 'hour'), y: MinLevel });
                    // -----
                    $.each(result, function (i, v) {
                        if (moment(v.TimeStamp) >= moment().subtract(168, 'hour')) {
                            myChart.data.datasets[0].data.push({
                                x: moment(v.TimeStamp),
                                y: v.Tank
                            });
                        }
                    });
                    myChart.data.labels.push(moment().minute(0).add(1,'hour'));
                    myChart.update();
                }
            });
    }
</script>